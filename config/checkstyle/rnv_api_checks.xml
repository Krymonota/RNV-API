<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      https://docs.oracle.com/javase/specs/jls/se11/html/index.html

    - the Sun Code Conventions at https://www.oracle.com/technetwork/java/codeconvtoc-136057.html

    - the Javadoc guidelines at
      https://www.oracle.com/technetwork/java/javase/documentation/index-137868.html

    - the JDK Api documentation https://docs.oracle.com/en/java/javase/11/

    - some best practices

  Adjusted to the coding conventions of RNV-API.
  Based on sun_checks.xml version f175dfe.

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sourceforge.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        https://checkstyle.org/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Excludes all 'module-info.java' files              -->
    <!-- See https://checkstyle.org/config_filefilters.html -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sourceforge.net/config_javadoc.html#JavadocPackage -->
    <module name="JavadocPackage"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sourceforge.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sourceforge.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
    <module name="FileLength"/>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sourceforge.net/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sourceforge.net/config_misc.html -->
    <module name="RegexpSingleline">
       <property name="format" value="\s+$"/>
       <property name="minimum" value="0"/>
       <property name="maximum" value="0"/>
       <property name="message" value="Line has trailing spaces."/>
    </module>

    <!-- Start of RNV-API Coding Conventions     -->
    <!-- Checks for Regexp                             -->
    <!-- See http://checkstyle.sourceforge.net/config_regexp.html -->
    <module name="RegexpMultiline">
        <property name="format" value="^([^(\r\n|\r|\n) ]+ )*(class|interface|enum) [^{]*\{(\r\n|\r|\n)[^(\r\n|\r|\n)}]"/>
        <property name="message" value="Add an empty line after class/interface/enum definition!"/>
        <property name="fileExtensions" value="java"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="[^(\r\n|\r|\n){](\r\n|\r|\n)\}(\r\n|\r|\n)"/>
        <property name="message" value="Add an empty line before end of class/interface/enum definition!"/>
        <property name="fileExtensions" value="java"/>
    </module>
    <!-- End of RNV-API Coding Conventions       -->

    <!-- Start of RNV-API Coding Conventions         -->
    <!-- Checks for Headers                                -->
    <!-- See http://checkstyle.sourceforge.net/config_header.html   -->
    <module name="Header">
        <property name="headerFile" value="${checkstyle.header.file}"/>
        <property name="fileExtensions" value="java"/>
    </module>
    <!-- End of RNV-API Coding Conventions           -->

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sourceforge.net/config_javadoc.html -->
        <!-- Start of RNV-API Coding Conventions     -->
        <!--
        <module name="JavadocMethod"/>
        -->
        <!-- End of RNV-API Coding Conventions       -->
        <module name="JavadocType"/>
        <!-- Start of RNV-API Coding Conventions     -->
        <!--
        <module name="JavadocVariable"/>
        -->
        <!-- End of RNV-API Coding Conventions       -->
        <module name="JavadocStyle"/>
        <!-- Start of RNV-API Coding Conventions     -->
        <module name="WriteTag">
            <property name="tag" value="@author"/>
            <property name="tagFormat" value="\S"/>
            <property name="severity" value="ignore"/>
            <property name="tagSeverity" value="error"/>
        </module>
        <module name="WriteTag">
            <property name="tag" value="@since"/>
            <property name="tagFormat" value="\S"/>
            <property name="severity" value="error"/>
            <property name="tagSeverity" value="ignore"/>
            <property name="tokens" value="INTERFACE_DEF, CLASS_DEF, ENUM_DEF"/>
        </module>
        <module name="WriteTag">
            <property name="tag" value="@version"/>
            <property name="tagFormat" value="\S"/>
            <property name="severity" value="error"/>
            <property name="tagSeverity" value="ignore"/>
            <property name="tokens" value="INTERFACE_DEF, CLASS_DEF, ENUM_DEF"/>
        </module>
        <!-- End of RNV-API Coding Conventions       -->

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sourceforge.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName">
            <!-- Start of RNV-API Coding Conventions  -->
            <property name="format" value="^io\.github\.krymonota\.rnvapi.*$"/>
            <!-- End of RNV-API Coding Conventions    -->
        </module>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sourceforge.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <!-- Start of RNV-API Coding Conventions       -->
        <module name="CustomImportOrder">
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="customImportOrderRules" value="STATIC###STANDARD_JAVA_PACKAGE"/>
        </module>
        <!-- End of RNV-API Coding Conventions         -->
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
        <module name="LineLength">
            <!-- Start of RNV-API Coding Conventions  -->
            <property name="max" value="120"/>
            <!-- End of RNV-API Coding Conventions    -->
        </module>
        <module name="MethodLength">
            <!-- Start of RNV-API Coding Conventions  -->
            <property name="tokens" value="METHOD_DEF"/>
            <property name="max" value="50"/>
            <!-- End of RNV-API Coding Conventions    -->
        </module>
        <module name="ParameterNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sourceforge.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <!-- Start of RNV-API Coding Conventions  -->
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
        </module>
        <!-- End of RNV-API Coding Conventions    -->
        <module name="GenericWhitespace"/>
        <!-- Start of RNV-API Coding Conventions  -->
        <module name="Indentation">
        </module>
        <!-- End of RNV-API Coding Conventions    -->
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sourceforge.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sourceforge.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sourceforge.net/config_coding.html -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField"/>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <!-- Start of RNV-API Coding Conventions       -->
        <module name="RequireThis">
            <property name="validateOnlyOverlapping" value="false"/>
        </module>
        <!-- End of RNV-API Coding Conventions         -->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sourceforge.net/config_design.html -->
        <module name="DesignForExtension"/>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sourceforge.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters"/>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

    </module>

</module>
